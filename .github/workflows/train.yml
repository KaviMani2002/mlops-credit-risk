name: Train Multi Model with DVC

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**.py'
      - '.github/workflows/train.yml'

jobs:
  train-model:
    runs-on: self-hosted  # ‚úÖ Self-hosted runner

    env:
      MLFLOW_TRACKING_URI: http://20.106.177.129:5000
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      GITHUB_ACTIONS: true

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      - name: üñ•Ô∏è Debug runner environment
        run: |
          echo "Runner OS: ${{ runner.os }}"
          echo "Architecture: ${{ runner.arch }}"
          python3 --version
          pip3 --version
          df -h
          free -m

      - name: üì¶ Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --no-cache-dir "cryptography<41"
          pip3 install --no-cache-dir "dvc[azure]"
          pip3 install --no-cache-dir -r requirements.txt

      - name: ‚öôÔ∏è Configure DVC Azure Remote
        run: |
          dvc remote list | grep azureremote || dvc remote add -d azureremote azure://dvcdata
          dvc remote modify azureremote connection_string "${{ secrets.AZURE_DVC_CONNECTION }}"

      - name: ‚¨áÔ∏è Pull data from Azure DVC remote
        run: |
          export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
          dvc pull

      - name: üîé Verify pulled data integrity
        run: |
          dvc status -c
          dvc doctor
          ls -lh data/ || true
          ls -lh *.dvc || true
          dvc list .

      # ---------- DATA INGESTION ----------
      - name: üìÇ Run data ingestion
        run: python3 src/data_ingestion.py

      # ---------- DATA CLEANING ----------
      - name: üßπ Run data cleaning
        run: python3 src/data_cleaning.py

      # ---------- FEATURE ENGINEERING ----------
      - name: üèóÔ∏è Run feature engineering
        run: python3 src/feature_engineering.py

      # ---------- MODEL TRAINING ----------
      - name: üöÄ Train models and log to MLflow
        run: python3 src/train_multi_model.py

      - name: üöÄ Promote Models to Staging stage
        run: python3 src/promote_best_models.py

      # ---------- CLEANUP STEP ----------
      - name: üßπ Cleanup runner workspace and caches
        if: always()
        run: |
          echo "Cleaning up runner workspace and caches..."
          
          # Remove repo workspace safely
          sudo rm -rf "${{ github.workspace }}"/* || true
          
          # Remove DVC and pip caches
          rm -rf ~/.dvc/cache || true
          rm -rf ~/.cache/pip || true
          
          # Clear runner _work folder except _actions
          if [ -d "/home/azureuser/actions-runner/_work" ]; then
            sudo find /home/azureuser/actions-runner/_work -mindepth 1 -maxdepth 1 \
              -not -name "_actions" -exec rm -rf {} +
          fi
          
          # Clear _tool folder
          if [ -d "/home/azureuser/actions-runner/_tool" ]; then
            sudo rm -rf /home/azureuser/actions-runner/_tool/*
          fi
          
          # Remove old logs
          if [ -d "/home/azureuser/actions-runner/_diag" ]; then
            sudo rm -rf /home/azureuser/actions-runner/_diag/* || true
          fi

          echo "Cleanup complete."
