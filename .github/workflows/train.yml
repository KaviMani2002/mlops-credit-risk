name: Train Multi Model with DVC

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**.py'
      - '.github/workflows/train.yml'

jobs:
  train-model:
    runs-on: self-hosted  # pin to your runner

    env:
      MLFLOW_TRACKING_URI: http://20.106.177.129:5000
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      GITHUB_ACTIONS: true

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      - name: üñ•Ô∏è Debug runner environment
        run: |
          echo "Runner OS: ${{ runner.os }}"
          echo "Architecture: ${{ runner.arch }}"
          python3 --version
          pip3 --version
          df -h
          free -m

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install 'dvc[azure]'

      - name: ‚öôÔ∏è Configure DVC Azure Remote
        run: |
          dvc remote list | grep azureremote || dvc remote add -d azureremote azure://dvcdata
          dvc remote modify azureremote connection_string "${{ secrets.AZURE_DVC_CONNECTION }}"

      - name: ‚¨áÔ∏è Pull data from Azure DVC remote
        run: dvc pull

      - name: üîé Verify pulled data integrity
        run: |
          dvc status -c
          dvc doctor
          ls -lh data/ || true
          ls -lh *.dvc || true
          dvc list .

      - name: üìÇ Run data ingestion
        run: python3 src/data_ingestion.py

      - name: üßπ Run data cleaning
        run: python3 src/data_cleaning.py

      - name: üèóÔ∏è Run feature engineering
        run: python3 src/feature_engineering.py

      - name: üöÄ Train models and log to MLflow
        run: python3 src/train_multi_model.py

      - name: üöÄ Promote Models to Staging stage
        run: python3 src/promote_best_models.py

      - name: üßπ Cleanup runner workspace and caches
        if: always()
        run: |
          echo "Cleaning up runner workspace and caches..."

          # 1Ô∏è‚É£ Remove repo workspace safely
          sudo rm -rf "${{ github.workspace }}"/* || true

          # 2Ô∏è‚É£ Remove DVC and pip caches
          rm -rf ~/.dvc/cache || true
          rm -rf ~/.cache/pip || true

          # 3Ô∏è‚É£ Remove build artifacts in runner _work folder (keep _actions)
          if [ -d "/home/azureuser/actions-runner/_work" ]; then
            sudo find /home/azureuser/actions-runner/_work -mindepth 1 -maxdepth 1 \
              -not -name "_actions" -exec rm -rf {} +
          fi

          # 4Ô∏è‚É£ Clean _tool folder only if it exists
          if [ -d "/home/azureuser/actions-runner/_tool" ]; then
            sudo rm -rf /home/azureuser/actions-runner/_tool/*
          fi

          # 5Ô∏è‚É£ Optional: Remove old logs to save space
          if [ -d "/home/azureuser/actions-runner/_diag" ]; then
            sudo rm -rf /home/azureuser/actions-runner/_diag/* || true
          fi

          echo "Cleanup complete."
